# Credits https://blog.oddbit.com/post/2020-09-25-building-multi-architecture-im/
---
name: 'build docker images'

on:
  workflow_dispatch:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}
          SHORTREF=${GITHUB_SHA::8}

          # Use latest as default image tag
          TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${SHORTREF}"

          # If this is git tag, check tag name for semver
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            # Extract semver tag v1.0.1 to VERSION 1.0.1
            VERSION=${GITHUB_REF#refs/tags/v}

            # If the VERSION looks like a semver version major.minor.patch,
            # tag image also with major, major.minor
            if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
              MAJOR=$(echo ${VERSION} | cut -d. -f1)
              MAJOR_MINOR=$(echo ${VERSION} | cut -d. -f1,2)
              TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:${MAJOR_MINOR},${DOCKER_IMAGE}:${VERSION}"
            fi
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
